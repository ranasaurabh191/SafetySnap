# Generated by Django 5.1 on 2025-10-04 18:48

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Detection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_image', models.ImageField(upload_to='uploads/%Y/%m/%d/')),
                ('annotated_image', models.ImageField(blank=True, null=True, upload_to='results/%Y/%m/%d/')),
                ('is_video', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('compliance_status', models.CharField(blank=True, choices=[('compliant', 'Fully Compliant'), ('partial', 'Partially Compliant'), ('non_compliant', 'Non-Compliant')], max_length=20, null=True)),
                ('total_persons_detected', models.IntegerField(default=0)),
                ('compliant_persons', models.IntegerField(default=0)),
                ('non_compliant_persons', models.IntegerField(default=0)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('processing_time', models.FloatField(default=0.0, help_text='Processing time in seconds')),
                ('notes', models.TextField(blank=True)),
                ('location_lat', models.FloatField(blank=True, null=True)),
                ('location_lng', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='detections', to='users.site')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'detections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PersonDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.IntegerField(help_text='Person number in the image')),
                ('bbox_x1', models.FloatField()),
                ('bbox_y1', models.FloatField()),
                ('bbox_x2', models.FloatField()),
                ('bbox_y2', models.FloatField()),
                ('confidence', models.FloatField()),
                ('helmet_detected', models.BooleanField(default=False)),
                ('helmet_confidence', models.FloatField(default=0.0)),
                ('vest_detected', models.BooleanField(default=False)),
                ('vest_confidence', models.FloatField(default=0.0)),
                ('boots_detected', models.BooleanField(default=False)),
                ('boots_confidence', models.FloatField(default=0.0)),
                ('gloves_detected', models.BooleanField(default=False)),
                ('gloves_confidence', models.FloatField(default=0.0)),
                ('glasses_detected', models.BooleanField(default=False)),
                ('glasses_confidence', models.FloatField(default=0.0)),
                ('mask_detected', models.BooleanField(default=False)),
                ('mask_confidence', models.FloatField(default=0.0)),
                ('harness_detected', models.BooleanField(default=False)),
                ('harness_confidence', models.FloatField(default=0.0)),
                ('is_compliant', models.BooleanField(default=False)),
                ('missing_ppe', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persons', to='ppe_detection.detection')),
            ],
            options={
                'db_table': 'person_detections',
                'ordering': ['person_id'],
            },
        ),
        migrations.CreateModel(
            name='PPEPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('zone_type', models.CharField(choices=[('construction', 'Construction Zone'), ('welding', 'Welding Area'), ('electrical', 'Electrical Work'), ('height', 'Height Work'), ('confined', 'Confined Space'), ('general', 'General Area')], max_length=50)),
                ('risk_level', models.CharField(choices=[('high', 'High Risk'), ('medium', 'Medium Risk'), ('low', 'Low Risk')], default='medium', max_length=20)),
                ('helmet_required', models.BooleanField(default=True)),
                ('vest_required', models.BooleanField(default=True)),
                ('boots_required', models.BooleanField(default=True)),
                ('gloves_required', models.BooleanField(default=False)),
                ('glasses_required', models.BooleanField(default=False)),
                ('mask_required', models.BooleanField(default=False)),
                ('harness_required', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='users.site')),
            ],
            options={
                'verbose_name_plural': 'PPE Policies',
                'db_table': 'ppe_policies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='detection',
            name='policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ppe_detection.ppepolicy'),
        ),
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation_type', models.CharField(max_length=100)),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='open', max_length=20)),
                ('description', models.TextField()),
                ('recommendation', models.TextField(blank=True)),
                ('osha_standard', models.CharField(blank=True, max_length=100)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_violations', to=settings.AUTH_USER_MODEL)),
                ('detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='ppe_detection.detection')),
                ('person_detection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='ppe_detection.persondetection')),
            ],
            options={
                'db_table': 'violations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['-created_at'], name='detections_created_c07e83_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['user', '-created_at'], name='detections_user_id_e8ae42_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['site', '-created_at'], name='detections_site_id_8eb0c2_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['status', '-created_at'], name='violations_status_4396d5_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['severity', '-created_at'], name='violations_severit_a44076_idx'),
        ),
    ]
